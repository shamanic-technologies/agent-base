[
  {
    "id": "utility_gmail_read",
    "provider": "gmail",
    "description": "Read emails from Gmail using the Gmail API.",
    "schema": {
      "query": {
        "jsonSchema": {
          "type": "string",
          "description": "Search query to filter emails (same format as Gmail search).",
          "examples": [
            "from:no-reply@example.com",
            "is:unread subject:Important"
          ]
        }
      },
      "maxResults": {
        "jsonSchema": {
          "type": "number",
          "description": "Maximum number of emails to return (default: 10).",
          "default": 10,
          "examples": [
            5,
            20
          ]
        }
      },
      "labelIds": {
        "jsonSchema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of label IDs to filter emails by (e.g., [\"INBOX\", \"UNREAD\"]). Default: [\"INBOX\"].",
          "default": [
            "INBOX"
          ],
          "examples": [
            [
              "INBOX"
            ],
            [
              "SENT",
              "IMPORTANT"
            ]
          ]
        }
      }
    },
    "authMethod": "OAUTH",
    "requiredSecrets": [],
    "requiredScopes": [
      "https://www.googleapis.com/auth/gmail.readonly"
    ],
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://gmail.googleapis.com/gmail/v1",
      "pathTemplate": "/users/me/messages",
      "paramMappings": {
        "query": {
          "query": "q",
          "maxResults": "maxResults",
          "labelIds": {
            "target": "labelIds",
            "transform": "joinComma"
          }
        }
      }
    }
  },
  {
    "id": "stripe_list_customers",
    "provider": "stripe",
    "description": "Lists customers in Stripe, optionally filtered.",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "number",
          "description": "Maximum number of customers to return (1-100, default 10).",
          "minimum": 1,
          "maximum": 100,
          "default": 10,
          "examples": [
            10,
            50
          ]
        }
      },
      "email": {
        "jsonSchema": {
          "type": "string",
          "format": "email",
          "description": "Filter customers by email address.",
          "examples": [
            "customer@example.com"
          ]
        }
      },
      "starting_after": {
        "jsonSchema": {
          "type": "string",
          "description": "Cursor for pagination (customer ID to start after).",
          "examples": [
            "cus_PqKWHRv7K3sk3h"
          ]
        }
      },
      "ending_before": {
        "jsonSchema": {
          "type": "string",
          "description": "Cursor for pagination (customer ID to end before).",
          "examples": [
            "cus_9K87654321fedcba"
          ]
        }
      }
    },
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/customers",
      "paramMappings": {
        "query": {
          "limit": "limit",
          "email": "email",
          "starting_after": "starting_after",
          "ending_before": "ending_before"
        }
      },
      "staticHeaders": {
        "Stripe-Version": "2024-04-10"
      }
    }
  },
  {
    "id": "utility_crisp_subscribe_message_send",
    "provider": "crisp",
    "description": "Checks prerequisites for setting up a Crisp webhook to forward visitor messages.",
    "schema": {},
    "authMethod": "NONE",
    "requiredSecrets": [
      "website_id",
      "webhook_url_inputed"
    ],
    "apiDetails": null
  },
  {
    "id": "utility_example_get_data",
    "provider": "gmail",
    "description": "A simple example tool.",
    "schema": {
      "itemId": {
        "jsonSchema": {
          "type": "string",
          "description": "The ID of the item to fetch."
        }
      }
    },
    "authMethod": "NONE",
    "requiredSecrets": [],
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://jsonplaceholder.typicode.com",
      "pathTemplate": "/todos/{itemId}",
      "paramMappings": {
        "path": {
          "itemId": "itemId"
        }
      }
    }
  },
  {
    "id": "test_tool_creation",
    "provider": "stripe",
    "description": "A test tool created via API.",
    "schema": {
      "optionalParam": {
        "jsonSchema": {
          "type": "string",
          "description": "An optional parameter."
        }
      }
    },
    "authMethod": "NONE",
    "requiredSecrets": [],
    "apiDetails": null
  },
  {
    "id": "my_test_proxy_tool",
    "provider": "slack",
    "description": "A test tool created via proxy.",
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "schema": {
      "channel_id": {
        "jsonSchema": {
          "type": "string",
          "description": "The ID of the Slack channel.",
          "examples": [
            "C123456789"
          ]
        }
      },
      "message_text": {
        "jsonSchema": {
          "type": "string",
          "description": "The message content to send.",
          "examples": [
            "Hello from the test tool!"
          ]
        }
      }
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://slack.com/api",
      "pathTemplate": "/chat.postMessage",
      "paramMappings": {
        "body": {
          "channel_id": "channel",
          "message_text": "text"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/json; charset=utf-8"
      }
    }
  },
  {
    "id": "stripe_create_customer_direct_4",
    "provider": "stripe",
    "description": "Creates a new customer in Stripe (direct retry 4).",
    "schema": {
      "email": {
        "jsonSchema": {
          "type": "string",
          "description": "Customer's email address.",
          "format": "email",
          "examples": [
            "jenny.direct4@example.com"
          ]
        }
      },
      "name": {
        "jsonSchema": {
          "type": "string",
          "description": "Customer's full name.",
          "examples": [
            "Jenny Direct 4"
          ]
        }
      }
    },
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/customers",
      "paramMappings": {
        "body": {
          "email": "email",
          "name": "name"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/x-www-form-urlencoded"
      }
    }
  },
  {
    "id": "stripe_create_customer_via_util_5",
    "provider": "stripe",
    "description": "Creates a new customer in Stripe (via utility final retry).",
    "schema": {
      "email": {
        "jsonSchema": {
          "type": "string",
          "description": "Customer's email address.",
          "format": "email",
          "examples": [
            "jenny.util5@example.com"
          ]
        }
      },
      "name": {
        "jsonSchema": {
          "type": "string",
          "description": "Customer's full name.",
          "examples": [
            "Jenny Util 5"
          ]
        }
      }
    },
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/customers",
      "paramMappings": {
        "body": {
          "email": "email",
          "name": "name"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/x-www-form-urlencoded"
      }
    }
  },
  {
    "id": "stripe_list_charges",
    "provider": "stripe",
    "description": "Lists charges (payments received) from Stripe",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "number",
          "description": "Maximum number of charges to return (1-100, default 10)",
          "default": 10,
          "minimum": 1,
          "maximum": 100,
          "examples": [
            10,
            50
          ]
        }
      },
      "starting_after": {
        "jsonSchema": {
          "type": "string",
          "description": "Cursor for pagination (charge ID to start after)",
          "examples": [
            "ch_1234567890abcdef"
          ]
        }
      },
      "ending_before": {
        "jsonSchema": {
          "type": "string",
          "description": "Cursor for pagination (charge ID to end before)",
          "examples": [
            "ch_1234567890abcdef"
          ]
        }
      }
    },
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/charges",
      "paramMappings": {
        "query": {
          "limit": "limit",
          "starting_after": "starting_after",
          "ending_before": "ending_before"
        }
      },
      "staticHeaders": {
        "Stripe-Version": "2024-04-10"
      }
    }
  },
  {
    "id": "stripe_list_balance_transactions",
    "provider": "stripe",
    "description": "Lists balance transactions from Stripe",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "number",
          "description": "Maximum number of transactions to return (1-100, default 10)",
          "default": 10,
          "minimum": 1,
          "maximum": 100,
          "examples": [
            10,
            50
          ]
        }
      },
      "starting_after": {
        "jsonSchema": {
          "type": "string",
          "description": "Cursor for pagination (transaction ID to start after)",
          "examples": [
            "txn_1234567890abcdef"
          ]
        }
      },
      "ending_before": {
        "jsonSchema": {
          "type": "string",
          "description": "Cursor for pagination (transaction ID to end before)",
          "examples": [
            "txn_1234567890abcdef"
          ]
        }
      }
    },
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/balance/history",
      "paramMappings": {
        "query": {
          "limit": "limit",
          "starting_after": "starting_after",
          "ending_before": "ending_before"
        }
      },
      "staticHeaders": {
        "Stripe-Version": "2024-04-10"
      }
    }
  },
  {
    "id": "utility_gmail_send",
    "provider": "gmail",
    "description": "Sends an email using the Gmail API.",
    "schema": {
      "to": {
        "jsonSchema": {
          "type": [
            "string",
            "array"
          ],
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Required. Recipient email address(es).",
          "examples": [
            "recipient@example.com",
            [
              "recipient1@example.com",
              "recipient2@example.com"
            ]
          ]
        }
      },
      "subject": {
        "jsonSchema": {
          "type": "string",
          "description": "Required. Subject line of the email.",
          "examples": [
            "Meeting Confirmation"
          ]
        }
      },
      "body_text": {
        "jsonSchema": {
          "type": "string",
          "description": "Plain text body of the email. Required if body_html is not provided.",
          "examples": [
            "Hello, confirming our meeting."
          ]
        }
      },
      "body_html": {
        "jsonSchema": {
          "type": "string",
          "description": "HTML body of the email. Required if body_text is not provided.",
          "examples": [
            "<p>Hello, confirming our <b>meeting</b>.</p>"
          ]
        }
      },
      "cc": {
        "jsonSchema": {
          "type": [
            "string",
            "array"
          ],
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Optional. CC recipient email address(es).",
          "examples": [
            "cc@example.com"
          ]
        }
      },
      "bcc": {
        "jsonSchema": {
          "type": [
            "string",
            "array"
          ],
          "items": {
            "type": "string",
            "format": "email"
          },
          "description": "Optional. BCC recipient email address(es).",
          "examples": [
            "bcc@example.com"
          ]
        }
      },
      "reply_to": {
        "jsonSchema": {
          "type": "string",
          "format": "email",
          "description": "Optional. Reply-To email address.",
          "examples": [
            "reply-to@example.com"
          ]
        }
      }
    },
    "authMethod": "OAUTH",
    "requiredSecrets": [],
    "requiredScopes": [
      "https://www.googleapis.com/auth/gmail.send"
    ],
    "apiDetails": null
  }
]