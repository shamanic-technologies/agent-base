[
  {
    "id": "stripe_list_refunds",
    "utilityProvider": "stripe",
    "description": "List all refunds from Stripe account",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "A limit on the number of objects to be returned."
        }
      }
    },
    "authMethod": "API_KEY",
    "apiKeyDetails": {
      "scheme": "Bearer",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ]
  },
  {
    "id": "stripe_list_refunds_v2",
    "utilityProvider": "stripe",
    "description": "List all refunds from Stripe account",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "A limit on the number of objects to be returned."
        }
      }
    },
    "authMethod": "API_KEY",
    "apiKeyDetails": {
      "scheme": "Bearer",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/refunds",
      "paramMappings": {
        "query": {
          "limit": "limit"
        }
      }
    }
  },
  {
    "id": "stripe_list_customers",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "A limit on the number of customers to be returned."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/customers",
      "paramMappings": {
        "query": {
          "limit": "limit"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all customers from Stripe account",
    "apiKeyDetails": {
      "scheme": "Bearer",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "utilityProvider": "stripe"
  },
  {
    "id": "chargebee_list_customers",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "Number of customers to retrieve (max 100)."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.chargebee.com/api/v2",
      "pathTemplate": "/customers",
      "paramMappings": {
        "query": {
          "limit": "limit"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all customers from Chargebee account",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "utilityProvider": "chargebee"
  },
  {
    "id": "chargebee_list_customers_v2",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "Number of customers to retrieve (max 100)."
        }
      },
      "site_name": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Chargebee site name"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://{{site_name}}.chargebee.com/api/v2",
      "pathTemplate": "/customers",
      "paramMappings": {
        "query": {
          "limit": "limit"
        },
        "path": {
          "site_name": "site_name"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all customers from Chargebee account",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "utilityProvider": "chargebee"
  },
  {
    "id": "chargebee_list_customers_v3",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "Number of customers to retrieve (max 100)."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://agent-base-test.chargebee.com/api/v2",
      "pathTemplate": "/customers",
      "paramMappings": {
        "query": {
          "limit": "limit"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all customers from Chargebee account",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "utilityProvider": "chargebee"
  },
  {
    "id": "chargebee_list_refunds",
    "schema": {
      "limit": {
        "jsonSchema": {
          "type": "integer",
          "description": "Number of refunds to retrieve (max 100)."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://agent-base-test.chargebee.com/api/v2",
      "pathTemplate": "/credit_notes",
      "paramMappings": {
        "query": {
          "limit": "limit"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all credit notes (refunds) from Chargebee account",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "utilityProvider": "chargebee"
  },
  {
    "id": "crisp_list_conversations",
    "schema": {
      "page": {
        "jsonSchema": {
          "type": "integer",
          "description": "Page number for pagination",
          "default": 0
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/conversations",
      "paramMappings": {
        "query": {
          "page": "page"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all conversations from Crisp",
    "apiKeyDetails": {
      "scheme": "Header",
      "headerName": "X-Crisp-Tier",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "website_id"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_get_conversation",
    "schema": {
      "session_id": {
        "jsonSchema": {
          "type": "string",
          "description": "The ID of the conversation to retrieve"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/conversation/{session_id}",
      "paramMappings": {
        "path": {
          "session_id": "session_id"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Get details of a specific Crisp conversation",
    "apiKeyDetails": {
      "scheme": "Header",
      "headerName": "X-Crisp-Tier",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "website_id"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_send_message",
    "schema": {
      "session_id": {
        "jsonSchema": {
          "type": "string",
          "description": "The ID of the conversation to send a message to"
        }
      },
      "message": {
        "jsonSchema": {
          "type": "string",
          "description": "The message text to send"
        }
      }
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/conversation/{session_id}/message",
      "paramMappings": {
        "path": {
          "session_id": "session_id"
        },
        "body": {
          "content": "message",
          "type": "text",
          "from": "operator",
          "origin": "chat"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Send a message to a Crisp conversation",
    "apiKeyDetails": {
      "scheme": "Header",
      "headerName": "X-Crisp-Tier",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "website_id"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_list_conversations_v2",
    "schema": {
      "page": {
        "jsonSchema": {
          "type": "integer",
          "description": "Page number for pagination",
          "default": 0
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversations",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "query": {
          "page": "page"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all conversations from Crisp",
    "apiKeyDetails": {
      "scheme": "Header",
      "headerName": "X-Crisp-Key",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key",
      "api_identifier"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_list_conversations_v3",
    "schema": {
      "page": {
        "jsonSchema": {
          "type": "integer",
          "default": 0,
          "description": "Page number for pagination"
        }
      },
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversations",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "query": {
          "page": "page"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all conversations from Crisp",
    "apiKeyDetails": {
      "scheme": "Header",
      "headerName": "X-Crisp-Key",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key",
      "api_identifier"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_list_conversations_v4",
    "schema": {
      "page": {
        "jsonSchema": {
          "type": "integer",
          "default": 0,
          "description": "Page number for pagination"
        }
      },
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversations",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "query": {
          "page": "page"
        }
      },
      "staticHeaders": {
        "X-Crisp-Tier": "api"
      }
    },
    "authMethod": "API_KEY",
    "description": "List all conversations from Crisp",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_list_conversations_v5",
    "schema": {
      "page": {
        "jsonSchema": {
          "type": "integer",
          "default": 0,
          "description": "Page number for pagination"
        }
      },
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversations",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "query": {
          "page": "page"
        }
      },
      "staticHeaders": {
        "X-Crisp-Tier": "api"
      }
    },
    "authMethod": "API_KEY",
    "description": "List all conversations from Crisp",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_list_conversations_v6",
    "schema": {
      "page": {
        "jsonSchema": {
          "type": "integer",
          "default": 0,
          "description": "Page number for pagination"
        }
      },
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversations",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "query": {
          "page": "page"
        }
      },
      "staticHeaders": {
        "X-Crisp-Tier": "plugin"
      }
    },
    "authMethod": "API_KEY",
    "description": "List all conversations from Crisp",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_send_message_v2",
    "schema": {
      "message": {
        "jsonSchema": {
          "type": "string",
          "description": "The message text to send"
        }
      },
      "session_id": {
        "jsonSchema": {
          "type": "string",
          "description": "The ID of the conversation to send a message to"
        }
      },
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversation/{session_id}/message",
      "paramMappings": {
        "body": {
          "from": "operator",
          "type": "text",
          "origin": "chat",
          "content": "message"
        },
        "path": {
          "session_id": "session_id",
          "website_id": "website_id"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Send a message to a Crisp conversation",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_create_webhook",
    "schema": {
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      },
      "url": {
        "jsonSchema": {
          "type": "string",
          "description": "The URL where webhook events will be sent"
        }
      },
      "events": {
        "jsonSchema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of events to subscribe to (e.g., message:send, message:received)"
        }
      }
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/webhooks",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "body": {
          "url": "url",
          "events": "events"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Create a webhook for Crisp to receive real-time events",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_list_webhooks",
    "schema": {
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/webhooks",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "List all webhooks configured for a Crisp website",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_create_webhook_v2",
    "schema": {
      "website_id": {
        "jsonSchema": {
          "type": "string",
          "description": "Your Crisp website ID"
        }
      },
      "url": {
        "jsonSchema": {
          "type": "string",
          "description": "The URL where webhook events will be sent"
        }
      },
      "events": {
        "jsonSchema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of events to subscribe to (e.g., message:send, message:received)"
        }
      }
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/webhooks",
      "paramMappings": {
        "path": {
          "website_id": "website_id"
        },
        "body": {
          "url": "url",
          "events": "events"
        }
      },
      "staticHeaders": {
        "X-Crisp-Tier": "plugin",
        "Content-Type": "application/json"
      }
    },
    "authMethod": "API_KEY",
    "description": "Create a webhook for Crisp to receive real-time events",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "api_identifier"
    },
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "utilityProvider": "crisp"
  }
]