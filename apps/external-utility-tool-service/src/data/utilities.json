[
  {
    "id": "crisp_send_message",
    "utilityProvider": "crisp",
    "description": "Envoie un message à une conversation Crisp existante",
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "BasicUser"
    },
    "apiDetails": {
      "baseUrl": "https://api.crisp.chat/v1",
      "method": "POST",
      "pathTemplate": "/website/{website_id}/conversation/{session_id}/message",
      "paramMappings": {
        "path": {
          "website_id": "website_id",
          "session_id": "session_id"
        },
        "body": {
          "type": "type",
          "from": "from",
          "origin": "origin",
          "content": "content"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/json",
        "X-Crisp-Tier": "plugin"
      }
    },
    "schema": {
      "type": "object",
      "properties": {
        "website_id": {
          "type": "string",
          "description": "L'identifiant du site web Crisp",
          "examples": [
            "7c86c257-92a1-4d61-9818-7a4b0e0f9b8f"
          ]
        },
        "session_id": {
          "type": "string",
          "description": "L'identifiant de la session de conversation",
          "examples": [
            "session_36ba3566-9651-4790-afc8-ffedbccc317f"
          ]
        },
        "type": {
          "type": "string",
          "description": "Le type de message à envoyer",
          "examples": [
            "text"
          ],
          "enum": [
            "text",
            "note",
            "file",
            "animation",
            "audio",
            "picker",
            "field",
            "carousel",
            "event"
          ]
        },
        "from": {
          "type": "string",
          "description": "L'expéditeur du message",
          "examples": [
            "operator"
          ],
          "enum": [
            "user",
            "operator"
          ]
        },
        "origin": {
          "type": "string",
          "description": "L'origine du message",
          "examples": [
            "chat"
          ],
          "enum": [
            "chat",
            "email"
          ]
        },
        "content": {
          "type": "string",
          "description": "Le contenu du message à envoyer",
          "examples": [
            "Bonjour, comment puis-je vous aider ?"
          ]
        }
      }
    }
  },
  {
    "id": "crisp_list_messages",
    "schema": {
      "type": "object",
      "properties": {
        "api_key": {
          "type": "string",
          "description": "Your Crisp API key"
        },
        "session_id": {
          "type": "string",
          "description": "The Crisp session ID"
        },
        "website_id": {
          "type": "string",
          "description": "The Crisp website ID"
        },
        "api_identifier": {
          "type": "string",
          "description": "Your Crisp API identifier"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversation/{session_id}/messages",
      "paramMappings": {
        "path": {
          "session_id": "session_id",
          "website_id": "website_id"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/json",
        "X-Crisp-API-Key": "{api_key}",
        "X-Crisp-API-Identifier": "{api_identifier}"
      }
    },
    "authMethod": "NONE",
    "description": "Lists messages from a Crisp chat conversation",
    "requiredSecrets": [],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_get_messages",
    "schema": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Your Crisp API identifier"
        },
        "password": {
          "type": "string",
          "description": "Your Crisp API key"
        },
        "session_id": {
          "type": "string",
          "description": "The Crisp session ID"
        },
        "website_id": {
          "type": "string",
          "description": "The Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversation/{session_id}/messages",
      "paramMappings": {
        "path": {
          "session_id": "session_id",
          "website_id": "website_id"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Lists messages from a Crisp chat conversation using Basic Authentication",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "username"
    },
    "requiredSecrets": [
      "username",
      "password"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_basic_messages",
    "schema": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Your Crisp API identifier"
        },
        "password": {
          "type": "string",
          "description": "Your Crisp API key"
        },
        "session_id": {
          "type": "string",
          "description": "The Crisp session ID"
        },
        "website_id": {
          "type": "string",
          "description": "The Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversation/{session_id}/messages",
      "paramMappings": {
        "path": {
          "session_id": "session_id",
          "website_id": "website_id"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/json"
      }
    },
    "authMethod": "API_KEY",
    "description": "Lists messages from a Crisp chat conversation using Basic Authentication",
    "apiKeyDetails": {
      "scheme": "BasicUser",
      "secretName": "username"
    },
    "requiredSecrets": [
      "username",
      "password"
    ],
    "utilityProvider": "crisp"
  },
  {
    "id": "crisp_header_messages",
    "schema": {
      "type": "object",
      "properties": {
        "api_key": {
          "type": "string",
          "description": "Your Crisp API key"
        },
        "api_identifier": {
          "type": "string",
          "description": "Your Crisp API identifier"
        },
        "session_id": {
          "type": "string",
          "description": "The Crisp session ID"
        },
        "website_id": {
          "type": "string",
          "description": "The Crisp website ID"
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.crisp.chat/v1",
      "pathTemplate": "/website/{website_id}/conversation/{session_id}/messages",
      "paramMappings": {
        "path": {
          "session_id": "session_id",
          "website_id": "website_id"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/json",
        "X-Crisp-API-Key": "{api_key}",
        "X-Crisp-API-Identifier": "{api_identifier}"
      }
    },
    "authMethod": "NONE",
    "description": "Lists messages from a Crisp chat conversation using header authentication",
    "requiredSecrets": [],
    "utilityProvider": "crisp"
  },
  {
    "id": "gmail_list_messages",
    "utilityProvider": "gmail",
    "description": "Liste les messages récents dans la boîte de réception Gmail de l'utilisateur.",
    "schema": {
      "type": "object",
      "properties": {
        "maxResults": {
          "type": "integer",
          "description": "Nombre maximum de messages à récupérer (max: 500).",
          "examples": [
            10
          ]
        },
        "q": {
          "type": "string",
          "description": "Requête de recherche optionnelle au format Gmail (ex: 'from:example@gmail.com').",
          "examples": [
            "is:unread"
          ]
        },
        "includeSpamTrash": {
          "type": "boolean",
          "description": "Inclure les messages du dossier Spam et Corbeille.",
          "examples": [
            false
          ]
        }
      }
    },
    "authMethod": "OAUTH",
    "requiredScopes": [
      "https://www.googleapis.com/auth/gmail.readonly"
    ],
    "requiredSecrets": [],
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://gmail.googleapis.com/gmail/v1",
      "pathTemplate": "/users/me/messages",
      "paramMappings": {
        "query": {
          "maxResults": "maxResults",
          "q": "q",
          "includeSpamTrash": "includeSpamTrash"
        }
      }
    }
  },
  {
    "id": "gmail_get_message",
    "utilityProvider": "gmail",
    "description": "Récupère le contenu d'un message Gmail spécifique.",
    "schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "L'ID du message à récupérer.",
          "examples": [
            "1234567890abcdef"
          ]
        },
        "format": {
          "type": "string",
          "description": "Format de retour du message (FULL, MINIMAL, RAW, METADATA).",
          "examples": [
            "FULL"
          ],
          "enum": [
            "FULL",
            "MINIMAL",
            "RAW",
            "METADATA"
          ]
        }
      }
    },
    "authMethod": "OAUTH",
    "requiredScopes": [
      "https://www.googleapis.com/auth/gmail.readonly"
    ],
    "requiredSecrets": [],
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://gmail.googleapis.com/gmail/v1",
      "pathTemplate": "/users/me/messages/{id}",
      "paramMappings": {
        "path": {
          "id": "id"
        },
        "query": {
          "format": "format"
        }
      }
    }
  },
  {
    "id": "stripe_list_refunds",
    "schema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "examples": [
            10
          ],
          "description": "Nombre maximum de remboursements à récupérer (max: 100)."
        },
        "starting_after": {
          "type": "string",
          "examples": [
            "re_1Nispe2eZvKYlo2Cd31jOCgZ"
          ],
          "description": "ID du remboursement après lequel commencer la liste."
        },
        "ending_before": {
          "type": "string",
          "examples": [
            "re_1Nispe2eZvKYlo2Cd31jOCgZ"
          ],
          "description": "ID du remboursement avant lequel terminer la liste."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/refunds",
      "paramMappings": {
        "query": {
          "limit": "limit",
          "starting_after": "starting_after",
          "ending_before": "ending_before"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Liste les remboursements récents dans votre compte Stripe.",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "utilityProvider": "stripe"
  },
  {
    "id": "stripe_get_refund",
    "schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "examples": [
            "re_1Nispe2eZvKYlo2Cd31jOCgZ"
          ],
          "description": "L'ID du remboursement à récupérer."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/refunds/{id}",
      "paramMappings": {
        "path": {
          "id": "id"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Récupère les détails d'un remboursement spécifique dans votre compte Stripe.",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "utilityProvider": "stripe"
  },
  {
    "id": "stripe_get_charge",
    "schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "examples": [
            "ch_3R5LCHGlVst8Q7tM0lGT1PYu"
          ],
          "description": "L'ID de la charge à récupérer."
        }
      }
    },
    "apiDetails": {
      "method": "GET",
      "baseUrl": "https://api.stripe.com/v1",
      "pathTemplate": "/charges/{id}",
      "paramMappings": {
        "path": {
          "id": "id"
        }
      }
    },
    "authMethod": "API_KEY",
    "description": "Récupère les détails d'une charge spécifique dans votre compte Stripe.",
    "apiKeyDetails": {
      "scheme": "Bearer",
      "secretName": "api_secret_key"
    },
    "requiredSecrets": [
      "api_secret_key"
    ],
    "utilityProvider": "stripe"
  },
  {
    "id": "crisp_list_conversations",
    "utilityProvider": "crisp",
    "description": "Liste les conversations Crisp d'un site web",
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_identifier",
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "BasicUser"
    },
    "apiDetails": {
      "baseUrl": "https://api.crisp.chat/v1",
      "method": "GET",
      "pathTemplate": "/website/{website_id}/conversations/{page_number}",
      "paramMappings": {
        "query": {
          "filter_unread": "filter_unread",
          "filter_resolved": "filter_resolved",
          "filter_not_resolved": "filter_not_resolved"
        }
      },
      "staticHeaders": {
        "Content-Type": "application/json"
      }
    },
    "schema": {
      "type": "object",
      "properties": {
        "website_id": {
          "type": "string",
          "description": "L'identifiant du site web Crisp",
          "examples": [
            "8c842203-7ed8-4e29-a608-7cf78a7d2fcc"
          ]
        },
        "page_number": {
          "type": "string",
          "description": "Le numéro de page pour la pagination",
          "examples": [
            "1"
          ]
        },
        "filter_unread": {
          "type": "string",
          "description": "Filtrer pour n'afficher que les conversations non lues (1 ou 0)",
          "examples": [
            "1"
          ]
        },
        "filter_resolved": {
          "type": "string",
          "description": "Filtrer pour n'afficher que les conversations résolues (1 ou 0)",
          "examples": [
            "0"
          ]
        },
        "filter_not_resolved": {
          "type": "string",
          "description": "Filtrer pour n'afficher que les conversations non résolues (1 ou 0)",
          "examples": [
            "1"
          ]
        }
      }
    }
  },
  {
    "id": "whatsapp_send_message",
    "utilityProvider": "agent-base",
    "description": "Envoie un message texte à un numéro WhatsApp spécifié",
    "schema": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string",
          "description": "Le numéro de téléphone WhatsApp du destinataire au format international (ex: +33612345678)",
          "examples": [
            "+33612345678"
          ]
        },
        "message": {
          "type": "string",
          "description": "Le contenu du message texte à envoyer",
          "examples": [
            "Bonjour, voici une notification importante concernant votre demande."
          ]
        }
      },
      "required": [
        "to",
        "message"
      ]
    },
    "authMethod": "API_KEY",
    "requiredSecrets": [
      "api_secret_key"
    ],
    "apiKeyDetails": {
      "secretName": "api_secret_key",
      "scheme": "Bearer"
    },
    "apiDetails": {
      "method": "POST",
      "baseUrl": "https://graph.facebook.com/v22.0",
      "pathTemplate": "/{phone_number_id}/messages",
      "staticHeaders": {
        "Content-Type": "application/json"
      },
      "paramMappings": {
        "body": {
          "messaging_product": "whatsapp",
          "recipient_type": "individual",
          "to": "to",
          "type": "text",
          "text": {
            "body": "message"
          }
        }
      }
    }
  }
]